download.file?
??
download.file("https://github.com/mdavis3419/RepData_PeerAssessment1/blob/master/activity.zip?raw=true",temp,mode="wb")
temp<-tempfile()
download.file("https://github.com/mdavis3419/RepData_PeerAssessment1/blob/master/activity.zip?raw=true",temp,mode="wb")
unzip(temp, "activity.csv")
data <- read.table("activity.csv", sep=",",header=T)
data
head(data)
temp <- tempfile()
url <- "https://github.com/mdavis3419/RepData_PeerAssessment1/blob/master/activity.zip?raw=true"
download.file(url, temp, mode="wb")
unzip(temp, "activity.csv")
CompleteActivityLog <- read.table("activity.csv", sep=",", header=T)
function <- getdata(){
temp <- tempfile()
url <- "https://github.com/mdavis3419/RepData_PeerAssessment1/blob/master/activity.zip?raw=true"
download.file(url, temp, mode="wb")
unzip(temp, "activity.csv")
read.table("activity.csv", sep=",", header=T)
function <- getdata(){
temp <- tempfile()
url <- "https://github.com/mdavis3419/RepData_PeerAssessment1/blob/master/activity.zip?raw=true"
download.file(url, temp, mode="wb")
unzip(temp, "activity.csv")
read.table("activity.csv", sep=",", header=T)
}
getdata <- function(){
temp <- tempfile()
url <- "https://github.com/mdavis3419/RepData_PeerAssessment1/blob/master/activity.zip?raw=true"
download.file(url, temp, mode="wb")
unzip(temp, "activity.csv")
read.table("activity.csv", sep=",", header=T)
}
head(CompleteActivityLog)
CompleteActivityLog[steps]
CompleteActivityLog$steps
head(CompleteActivityLog[CompleteActivityLog$steps != "NA"])
head(CompleteActivityLog[CompleteActivityLog$steps != "NA",])
head(CompleteActivityLog[CompleteActivityLog$steps != NA,])
head(CompleteActivityLog)
head(CompleteActivityLog[!IsNA(CompleteActivityLog$steps),])
head(CompleteActivityLog[!is.na(CompleteActivityLog$steps),])
nonNullActivityLog <- CompleteActivityLog[!is.na(CompleteActivityLog$steps),]
sapply(CompleteActivityLog, class)
sapply(nonNullActivityLog, class)
tapply(nonNullActivityLog$steps, nonNullActivityLog$date, FUN=sum)
is.na(nonNullActivityLog$steps)
nonNullActivityLog$steps[is.na(nonNullActivityLog$steps)]
tapply(nonNullActivityLog$steps, nonNullActivityLog$date, FUN=sum)
nonNullActivityLog[nonNullActivityLog$date = "2012-10-01"]
nonNullActivityLog[nonNullActivityLog$date == "2012-10-01"]
nonNullActivityLog[nonNullActivityLog$date == "2012-10-01",]
nonNullActivityLog[nonNullActivityLog$date == 2012-10-01,]
nonNullActivityLog[nonNullActivityLog$date == #2012-10-01#,]
nonNullActivityLog[nonNullActivityLog$date == tofactor(2012-10-01),]
nonNullActivityLog[nonNullActivityLog$date == strtofactor(2012-10-01),]
nonNullActivityLog[nonNullActivityLog$date == as.factor(2012-10-01),]
nonNullActivityLog[nonNullActivityLog$date == as.factor("2012-10-01"),]
nonNullActivityLog[nonNullActivityLog$date == as.Date("2012-10-01"),]
nonNullActivityLog[as.date(nonNullActivityLog$date) == as.Date("2012-10-01"),]
nonNullActivityLog[as.Date(nonNullActivityLog$date) == as.Date("2012-10-01"),]
nonNullActivityLog$date
unique(nonNullActivityLog$date)
tapply(nonNullActivityLog$steps, nonNullActivityLog$date, FUN=sum)
stepsPerMonth <- tapply(nonNullActivityLog$steps, nonNullActivityLog$date, FUN=sum)
type(stepsPerMonth)
class(stepsPerMonth)
stepsPerMonth[1,]
stepsPerMonth[1]
stepsPerMonth[2]
hist(stepsPerMonth)
stepsPerDay <- tapply(nonNullActivityLog$steps, nonNullActivityLog$date, FUN=sum)
hist(stepsPerDay)
?hist
hist(stepsPerDay, main="Histogram of Total Steps Per Day", xlab="# of Steps", ylab ="Frequency",)
hist(stepsPerDay, main="Histogram of Total Steps Per Day", xlab="# of Steps", ylab ="Frequency", breaks=10)
hist(stepsPerDay, main="Histogram of Total Steps Per Day", xlab="1000 step buckets", ylab ="Frequency", breaks=c(1000,2000,3000,4000,5000,6000,7000,8000,9000,10000,11000,12000,13000,14000,15000,16000,17000,18000,19000,20000,21000))
hist(stepsPerDay, main="Histogram of Total Steps Per Day", xlab="1000 step buckets", ylab ="Frequency", breaks=c(0,1000,2000,3000,4000,5000,6000,7000,8000,9000,10000,11000,12000,13000,14000,15000,16000,17000,18000,19000,20000,21000,22000,23000))
hist(stepsPerDay, main="Histogram of Total Steps Per Day", xlab="1000 step buckets", ylab ="Frequency", breaks=c(0,1000,2000,3000,4000,5000,6000,7000,8000,9000,10000,11000,12000,13000,14000,15000,16000,17000,18000,19000,20000,21000,22000))
hist(stepsPerDay, main="Histogram of Total Steps Per Day", xlab="1000 step buckets", ylab ="Frequency", breaks=c(0,2000,4000,6000,8000,10000,12000,14000,16000,18000,20000,22000))
hist(stepsPerDay, main="Histogram of Total Steps Per Day", xlab="2000 Step Buckets", ylab ="Frequency", breaks=c(0,2000,4000,6000,8000,10000,12000,14000,16000,18000,20000,22000))
min(stepsPerDay)
max(stepsPerDay,na.rm = TRUE)
min(stepsPerDay, na.rm = TRUE)
hist(stepsPerDay)
hist(stepsPerDay, main="Histogram of Total Steps Per Day", xlab="2000 Step Buckets", ylab ="Frequency", breaks=c(0,2000,4000,6000,8000,10000,12000,14000,16000,18000,20000,22000))
histOfStepsPerDay <- hist(stepsPerDay, main="Histogram of Total Steps Per Day", xlab="2000 Step Buckets", ylab ="Frequency", breaks=c(0,2000,4000,6000,8000,10000,12000,14000,16000,18000,20000,22000))
histOfStepsPerDay
plot(histOfStepsPerDay)
mean(stepsPerDay,rm.na = TRUE)
?mean
mean(stepsPerDay,na.rm = TRUE)
median(stepsPerDay,na.rm = TRUE)
meanStepsThroughoutDay <- tapply(nonNullActivityLog$steps, nonNullActivityLog$interval, mean)
View(data)
View(data)
remove(data)
?plot
names(meanStepsThroughoutDay)
plot(strtoi(names(meanStepsThroughoutDay)),meanStepsThroughoutDay, type="l")
plot(strtoi(names(meanStepsThroughoutDay))/60,meanStepsThroughoutDay, type="l")
plot(strtoi(names(meanStepsThroughoutDay))/100,meanStepsThroughoutDay, type="l")
plot(strtoi(names(meanStepsThroughoutDay))/100,meanStepsThroughoutDay, type="l", xlab="Time of Day",ylab="Steps (#)" )
plot(strtoi(names(meanStepsThroughoutDay))/100,meanStepsThroughoutDay, type="l", xlab="Time of Day",ylab="Steps (#)", axis(1, at = 4) )
plot(strtoi(names(meanStepsThroughoutDay))/100,meanStepsThroughoutDay, type="l", xlab="Time of Day",ylab="Steps (#)", axis(1, at=c(0,3,6,9,12,15,18,21,24)) )
plot(strtoi(names(meanStepsThroughoutDay))/100,meanStepsThroughoutDay, type="l", xlab="Time of Day",ylab="Steps (#)" )
plot(strtoi(names(meanStepsThroughoutDay))/100,meanStepsThroughoutDay, type="l", main = "Average Steps Taken Durring 5 Minute Intervals Throughtout The Day" xlab="Time of Day",ylab="Steps (#)" )
plot(strtoi(names(meanStepsThroughoutDay))/100,meanStepsThroughoutDay, type="l", main = "Average Steps Taken Durring 5 Minute Intervals Throughtout The Day", xlab="Time of Day",ylab="Steps (#)" )
plot(strtoi(names(meanStepsThroughoutDay))/100,meanStepsThroughoutDay, type="l", main = paint("Average Steps Taken Durring 5 Minute Intervals",\n,"Throughtout The Day"), xlab="Time of Day",ylab="Steps (#)" )
plot(strtoi(names(meanStepsThroughoutDay))/100,meanStepsThroughoutDay, type="l", main = paint("Average Steps Taken Durring 5 Minute Intervals"+ \n + "Throughtout The Day"), xlab="Time of Day",ylab="Steps (#)" )
paint("a" + "b")
plot(strtoi(names(meanStepsThroughoutDay))/100,meanStepsThroughoutDay, type="l", main = print("Average Steps Taken Durring 5 Minute Intervals"+ \n + "Throughtout The Day"), xlab="Time of Day",ylab="Steps (#)" )
print("a" + "b")
print("a", "b")
plot(strtoi(names(meanStepsThroughoutDay))/100,meanStepsThroughoutDay, type="l", main = "Average Steps Taken Durring 5 Minute Intervals", xlab="Time of Day",ylab="Steps (#)" )
plot(strtoi(names(meanStepsThroughoutDay))/100,meanStepsThroughoutDay, type="l", main = "Average Steps Taken Durring 5 Minute Intervals", xlab="Time of Day",ylab="Steps (#)", xaxt="n" )
axis(1,xaxp=seq(0,24, by = 6), las=2)
axis(1,at=seq(0,24, by = 6), las=2)
peakWalkingTime <- function(){
maxMeanStepsThroughoutDay <- max(meanStepsThroughoutDay, na.rm = TRUE)
names(meanStepsThroughoutDay[meanStepsThroughoutDay = maxMeanStepsThroughoutDay])
}
peakWalkingTime()
sort(meanStepsThroughoutDay, decreasing = TRUE)
names(sort(meanStepsThroughoutDay, decreasing = TRUE)[1])
substr(names(sort(meanStepsThroughoutDay, decreasing = TRUE)[1]),1,1)
substr(names(sort(meanStepsThroughoutDay, decreasing = TRUE)[1]),1,-3)
substr(names(sort(meanStepsThroughoutDay, decreasing = TRUE)[1]),1,-2)
test <-names(sort(meanStepsThroughoutDay, decreasing = TRUE)[1])
`substr(test,1,length(test)-2)
substr(test,1,length(test)-2)
substr(test,1,length(test)-1)
substr(test,1,length(test))
substr(test,1,1
)
substr(test,1,2)
substr(test,1,2,3)
substr(test,1,3)
lenght(test)
length(test)
substr(test,1,length(test[1])-2)
test[1]
length(test)
length(test[1])
nchar(test)
substr(test,1,nchar(test[1])-2)
substr(test,nchar(test[1])-2,nchar(test[1]))
substr(test,nchar(test[1])-1,nchar(test[1]))
textTime<-names(meanStepsThroughoutDay[meanStepsThroughoutDay = maxMeanStepsThroughoutDay])
maxMeanStepsThroughoutDay <- max(meanStepsThroughoutDay, na.rm = TRUE)
textTime<-names(meanStepsThroughoutDay[meanStepsThroughoutDay = maxMeanStepsThroughoutDay])
maxMeanStepsThroughoutDay <- names(sort(meanStepsThroughoutDay, decreasing = TRUE)[1])
textTime<-names(meanStepsThroughoutDay[meanStepsThroughoutDay = maxMeanStepsThroughoutDay])
paste(substr(textTime, 1, nchar(textTime)), substr(textTime,nchar(textTime[1])-1,nchar(textTime[1])), sep = ":")
paste(substr(textTime, 1, nchar(textTime)-2), substr(textTime,nchar(textTime[1])-1,nchar(textTime[1])), sep = ":")
length(CompleteActivityLog)
length(CompleteActivityLog[1])
length(CompleteActivityLog[1,])
length(CompleteActivityLog[,1])
length(CompleteActivityLog$steps)
length(CompleteActivityLog$steps[is.na(CompleteActivityLog$steps)])
as.data.frame(c(names(meanStepsThroughoutDay), meanStepsThroughoutDay))
class(meanStepsThroughoutDay)
as.data.frame(names(meanStepsThroughoutDay), meanStepsThroughoutDay)
?as.data.frame
data.frame(names(meanStepsThroughoutDay), meanStepsThroughoutDay)
data.frame(names(meanStepsThroughoutDay), meanStepsThroughoutDay, make.names(c("interval","steps")))
meanStepsThroughoutDayDF <- data.frame(names(meanStepsThroughoutDay), meanStepsThroughoutDay)
names(meanStepsThroughoutDayDF)
names(meanStepsThroughoutDayDF) <- c("interval", "steps")
names(meanStepsThroughoutDayDF)
head(meanStepsThroughoutDayDF)
head(CompleteActivityLog)
class(CompleteActivityLog$interval)
class(meanStepsThroughoutDayDF$interval)
meanStepsThroughoutDayDF <- data.frame(as.numeric(names(meanStepsThroughoutDay), meanStepsThroughoutDay)
meanStepsThroughoutDayDF <- data.frame(as.numeric(names(meanStepsThroughoutDay)), meanStepsThroughoutDay)
names(meanStepsThroughoutDayDF)
names(meanStepsThroughoutDayDF) <- c("interval", "steps")
class(meanStepsThroughoutDayDF$interval)
head(merge(CompleteActivityLog, meanStepsThroughoutDayDF, by="interval"))
NullReplacedActivityLog <-merge(CompleteActivityLog, meanStepsThroughoutDayDF, by="interval")
head(NullReplacedActivityLog)
test <- with(NullReplacedActivityLog, ifelse(is.na(steps.x),steps.y)
ifelse(!is.na(steps.x),steps.x)
test <- with(NullReplacedActivityLog, ifelse(is.na(steps.x),steps.y),
ifelse(!is.na(steps.x),steps.x)
)
test <- with(NullReplacedActivityLog, ifelse(is.na(steps.x),steps.y),steps.x)
test <- with(NullReplacedActivityLog, ifelse(is.na(steps.x),steps.y,steps.x)
)
head(test)
test <- NullReplacedActivityLog
test$steps.x <- with(NullReplacedActivityLog, ifelse(is.na(steps.x),steps.y,steps.x))
head(test)
NullReplacedActivityLog$steps.x <- with(NullReplacedActivityLog, ifelse(is.na(steps.x),steps.y,steps.x))
head(NullReplacedActivityLog, n= 50)
NullReplacedActivityLog[,c(1,2,3)]
head(NullReplacedActivityLog[,c(1,2,3)])
head(CompleteActivityLog)
NullReplacedActivityLog[,c(2,3,1)]
head(NullReplacedActivityLog[,c(1,2,3)])
head(NullReplacedActivityLog[,c(2,3,1)])
NullReplacedActivityLog <- NullReplacedActivityLog[,c(2,3,1)]
names(NullReplacedActivityLog) <- names(CompleteActivityLog)
head(NullReplacedActivityLog)
head(CompleteActivityLog)
stepsPerDayEstimated <- tapply(nonNullActivityLog$steps, nonNullActivityLog$date, sum)
histOfStepsPerDayEstimated <- hist(stepsPerDayEstimated, main="Histogram of Total Estimated Steps Per Day", xlab="2000 Step Buckets", ylab ="Frequency", breaks=buckets)
buckets <- c(0,2000,4000,6000,8000,10000,12000,14000,16000,18000,20000,22000)
histOfStepsPerDayEstimated <- hist(stepsPerDayEstimated, main="Histogram of Total Estimated Steps Per Day", xlab="2000 Step Buckets", ylab ="Frequency", breaks=buckets)
buckets <- c(0,2000,4000,6000,8000,10000,12000,14000,16000,18000,20000,22000,24000)
histOfStepsPerDayEstimated <- hist(stepsPerDayEstimated, main="Histogram of Total Estimated Steps Per Day", xlab="2000 Step Buckets", ylab ="Frequency", breaks=buckets)
buckets <- c(0,2000,4000,6000,8000,10000,12000,14000,16000,18000,20000,22000,24000)
median()
histOfStepsPerDayEstimated <- hist(stepsPerDayEstimated, main="Histogram of Total Estimated Steps Per Day", xlab="2000 Step Buckets", ylab ="Frequency", breaks=buckets)
meanEstimatedStepsPerDayExcludeNulls <- mean(stepsPerDayEstimated,na.rm = TRUE)
meanEstimatedStepsPerDayExcludeNulls
medianEstimatedStepsPerDayExcludeNulls <- median(stepsPerDayEstimated,na.rm = TRUE)
medianEstimatedStepsPerDayExcludeNulls
histOfStepsPerDayEstimated <- hist(stepsPerDayEstimated, main="Histogram of Total Estimated Steps Per Day", xlab="2000 Step Buckets", ylab ="Frequency", breaks=buckets)
histOfStepsPerDayEstimated
head(NullReplacedActivityLog)
NullReplacement <- function(){
meanStepsThroughoutDayDF <- data.frame(as.numeric(names(meanStepsThroughoutDay)), meanStepsThroughoutDay)
names(meanStepsThroughoutDayDF) <- c("interval", "steps")
NullReplacedActivityLog <- merge(CompleteActivityLog, meanStepsThroughoutDayDF, by="interval")
NullReplacedActivityLog$steps.x <- with(NullReplacedActivityLog, ifelse(is.na(steps.x),steps.y,steps.x))
NullReplacedActivityLog <- NullReplacedActivityLog[,c(2,3,1)]
names(NullReplacedActivityLog) <- names(CompleteActivityLog)
NullReplacedActivityLog
}
NullReplacedActivityLog <- NullReplacement()
head(NullReplacedActivityLog)
stepsPerDayEstimated <- tapply(NullReplacedActivityLog$steps, NullReplacedActivityLog$date, sum)
histOfStepsPerDayEstimated <- hist(stepsPerDayEstimated, main="Histogram of Total Estimated Steps Per Day", xlab="2000 Step Buckets", ylab ="Frequency", breaks=buckets)
meanEstimatedStepsPerDayExcludeNulls <- mean(stepsPerDayEstimated,na.rm = TRUE)
meanEstimatedStepsPerDayExcludeNulls
medianEstimatedStepsPerDayExcludeNulls <- median(stepsPerDayEstimated,na.rm = TRUE)
medianEstimatedStepsPerDayExcludeNulls
weekday(NullReplacedActivityLog$date)
weekdays(NullReplacedActivityLog$date)
?weekdays
weekdays(NullReplacedActivityLog$date, abbreviate = TRUE)
weekdays(as.Date(NullReplacedActivityLog$date), abbreviate = TRUE)
test<-NullReplacedActivityLog
test <- test + weekdays(as.Date(test$date), abbreviate = TRUE)
test[dayOfWeek] <- weekdays(as.Date(test$date), abbreviate = TRUE)
test$dayOfWeek <- weekdays(as.Date(test$date), abbreviate = TRUE)
head(test)
NullReplacedActivityLog$dayOfWeek <- weekdays(as.Date(NullReplacedActivityLog$date), abbreviate = TRUE)
NullReplacedActivityLog$DayType <- with(NullReplacedActivityLog, ifelse(dayOfWeek == "Sat" || dayOfWeek == "Sun", "Weekend","Weekday"))
head(NullReplacedActivityLog, n=50)
NullReplacedActivityLog$DayType <- with(NullReplacedActivityLog, ifelse(dayOfWeek == "Sat" | dayOfWeek == "Sun", "Weekend","Weekday"))
head(NullReplacedActivityLog, n=50)
class(NullReplacedActivityLog$DayType)
class(as.factor(NullReplacedActivityLog$DayType))
NullReplacedActivityLog$DayType <- as.factor(with(NullReplacedActivityLog, ifelse(dayOfWeek == "Sat" | dayOfWeek == "Sun", "Weekend","Weekday")))
class(NullReplacedActivityLog$DayType)
tapply(nullReplacedActivityLog$steps, nullReplacedActivityLog$interval ~ nullReplacedActivityLog$DayType, mean)
meanStepsThroughoutDayEstimated <- tapply(NullReplacedActivityLog$steps, NullReplacedActivityLog$interval ~ NullReplacedActivityLog$DayType, mean)
?tapply
meanStepsThroughoutDayEstimated <- tapply(NullReplacedActivityLog$steps, NullReplacedActivityLog$interval, NullReplacedActivityLog$DayType, mean)
head(NullReplacedActivityLog)
meanStepsThroughoutDayEstimated <- tapply(NullReplacedActivityLog$steps, NullReplacedActivityLog$interval, NullReplacedActivityLog$DayType, FUN = mean)
tapply(NullReplacedActivityLog, class)
sapply(NullReplacedActivityLog, class)
?sapply
?tapply
as.list(c("a","b","C"))
as.list("a","b","C")
?as.list
meanStepsThroughoutDayEstimated <- tapply(NullReplacedActivityLog$steps, as.list(NullReplacedActivityLog$interval, NullReplacedActivityLog$DayType), FUN = mean)
meanStepsThroughoutDayEstimated <- tapply(NullReplacedActivityLog$steps, list(NullReplacedActivityLog$interval, NullReplacedActivityLog$DayType), FUN = mean)
head(meanStepsThroughoutDayEstimated)
row.names(meanStepsThroughoutDayEstimated)
par(mfrow=c(2,1))
plot(strtoi(names(meanStepsThroughoutDayEstimated))/100,meanStepsThroughoutDayEstimated, type="l", main = "Average Steps Taken Durring 5 Minute Intervals", xlab="Time of Day (24h)",ylab="Steps (#)", xaxt="n" )
plot(strtoi(names(meanStepsThroughoutDayEstimated))/100,meanStepsThroughoutDayEstimated$Weekday, type="l", main = "Average Steps Taken Durring 5 Minute Intervals", xlab="Time of Day (24h)",ylab="Steps (#)", xaxt="n" )
class(meanStepsThroughoutDayEstimated)
plot(strtoi(names(meanStepsThroughoutDayEstimated))/100,meanStepsThroughoutDayEstimated[,1], type="l", main = "Average Steps Taken Durring 5 Minute Intervals", xlab="Time of Day (24h)",ylab="Steps (#)", xaxt="n" )
plot(strtoi(names(meanStepsThroughoutDayEstimated))/100,meanStepsThroughoutDayEstimated[1,], type="l", main = "Average Steps Taken Durring 5 Minute Intervals", xlab="Time of Day (24h)",ylab="Steps (#)", xaxt="n" )
meanStepsThroughoutDayEstimated[1,]
,1
meanStepsThroughoutDayEstimated[,1]
length(meanStepsThroughoutDayEstimated[,1])
length(names(meanStepsThroughoutDayEstimated))
length(row.names(meanStepsThroughoutDayEstimated))
plot(strtoi(row.names(meanStepsThroughoutDayEstimated))/100,meanStepsThroughoutDayEstimated[1,], type="l", main = "Average Steps Taken Durring 5 Minute Intervals", xlab="Time of Day (24h)",ylab="Steps (#)", xaxt="n" )
plot(strtoi(row.names(meanStepsThroughoutDayEstimated))/100,meanStepsThroughoutDayEstimated[,1], type="l", main = "Average Steps Taken Durring 5 Minute Intervals", xlab="Time of Day (24h)",ylab="Steps (#)", xaxt="n" )
plot(strtoi(row.names(meanStepsThroughoutDayEstimated))/100,meanStepsThroughoutDayEstimated[,2], type="l", main = "Average Steps Taken Durring 5 Minute Intervals", xlab="Time of Day (24h)",ylab="Steps (#)", xaxt="n" )
?plot
plot(strtoi(row.names(meanStepsThroughoutDayEstimated))/100,meanStepsThroughoutDayEstimated[,2], type="l", sub = "Weekday", xlab="Time of Day (24h)",ylab="Steps (#)", xaxt="n" )
plot(strtoi(row.names(meanStepsThroughoutDayEstimated))/100,meanStepsThroughoutDayEstimated[,2], type="l", sub = "Weekday", xlab="Time of Day (24h)",ylab="Steps (#)", xaxt="n" )
plot(strtoi(row.names(meanStepsThroughoutDayEstimated))/100,meanStepsThroughoutDayEstimated[,1], type="l", main = "Average Steps Taken Durring 5 Minute Intervals", sub = "Weekend" xlab="Time of Day (24h)",ylab="Steps (#)", xaxt="n" )
plot(strtoi(row.names(meanStepsThroughoutDayEstimated))/100,meanStepsThroughoutDayEstimated[,1], type="l", main = "Average Steps Taken Durring 5 Minute Intervals", sub = "Weekend",ylab="Steps (#)", xaxt="n" )
plot(strtoi(row.names(meanStepsThroughoutDayEstimated))/100,meanStepsThroughoutDayEstimated[,1], type="l", main = "Average Steps Taken Durring 5 Minute Intervals", sub = "Weekend",ylab="Steps (#)", xaxt="n",xlab = ""\ )
plot(strtoi(row.names(meanStepsThroughoutDayEstimated))/100,meanStepsThroughoutDayEstimated[,1], type="l", main = "Average Steps Taken Durring 5 Minute Intervals", sub = "Weekend",ylab="Steps (#)", xaxt="n",xlab = "" )
plot(strtoi(row.names(meanStepsThroughoutDayEstimated))/100,meanStepsThroughoutDayEstimated[,1], type="l", main = "Average Steps Taken Durring 5 Minute Intervals", sub = "Weekend",ylab="Steps (#)", xaxt="n",xlab = "" )
?plot
plot(strtoi(row.names(meanStepsThroughoutDayEstimated))/100,meanStepsThroughoutDayEstimated[,1], type="l", main = "Average Steps Taken Durring 5 Minute Intervals", sub = "Weekend",ylab="Steps (#)", xaxt="n",xlab = "",lwd=0)
library(lattice)
head(meanStepsThroughoutDayEstimated)
?"lattice"
xyplot(strtoi(row.names(meanStepsThroughoutDayEstimated))/100, meanStepsThroughoutDayEstimated[,1])
par(mfrow=c(1,1))
plot(strtoi(row.names(meanStepsThroughoutDayEstimated))/100,meanStepsThroughoutDayEstimated[,1], type="l", main = "Average Steps Taken Durring 5 Minute Intervals", sub = "Weekend",ylab="Steps (#)", xaxt="n",xlab = "",lwd=0)
head(data.frame(row.names(meanStepsThroughoutDayEstimated),meanStepsThroughoutDayEstimated$Weekday, rep("Weekday",length(meanStepsThroughoutDayEstimated$Weekday))))
head(data.frame(row.names(meanStepsThroughoutDayEstimated),meanStepsThroughoutDayEstimated[$Weekday[,1], rep("Weekday",length(meanStepsThroughoutDayEstimated[,1]))))
head(data.frame(row.names(meanStepsThroughoutDayEstimated),meanStepsThroughoutDayEstimated[,1], rep("Weekday",length(meanStepsThroughoutDayEstimated[,1]))))
weekdayMeanSteps <- data.frame(row.names(meanStepsThroughoutDayEstimated),meanStepsThroughoutDayEstimated[,1], rep("Weekday",length(meanStepsThroughoutDayEstimated[,1])))
names(weekdayMeanSteps)
weekendMeanSteps <- data.frame(row.names(meanStepsThroughoutDayEstimated),meanStepsThroughoutDayEstimated[,1], rep("Weekend",length(meanStepsThroughoutDayEstimated[,2])))
meanstepsThroughoutDayNames <- c("interval","steps","dayType")
names(weekdayMeanSteps) <- meanstepsThroughoutDayNames
names(weekendMeanSteps) <- meanstepsThroughoutDayNames
meanStepsThroughoutDayEstimated <- rbind(weekdayMeanSteps, weekendMeanSteps)
histogram(steps | factor(dayType),data = meanStepsThroughoutDayEstimated)
histogram(~ steps | factor(dayType),data = meanStepsThroughoutDayEstimated)
weekendMeanSteps <- data.frame(row.names(meanStepsThroughoutDayEstimated),meanStepsThroughoutDayEstimated[,2], rep("Weekend",length(meanStepsThroughoutDayEstimated[,2])))
names(weekendMeanSteps) <- meanstepsThroughoutDayNames
meanStepsThroughoutDayEstimated <- rbind(weekdayMeanSteps, weekendMeanSteps)
histogram(~ steps | factor(dayType),data = meanStepsThroughoutDayEstimated)
weekdayMeanSteps <- data.frame(row.names(meanStepsThroughoutDayEstimated),meanStepsThroughoutDayEstimated[,1], rep("Weekday",length(meanStepsThroughoutDayEstimated[,1])))
weekendMeanSteps <- data.frame(row.names(meanStepsThroughoutDayEstimated),meanStepsThroughoutDayEstimated[,2], rep("Weekend",length(meanStepsThroughoutDayEstimated[,2])))
names(weekdayMeanSteps) <- meanstepsThroughoutDayNames
names(weekendMeanSteps) <- meanstepsThroughoutDayNames
meanStepsThroughoutDayEstimated <- rbind(weekdayMeanSteps, weekendMeanSteps)
histogram(~ steps | factor(dayType),data = meanStepsThroughoutDayEstimated)
View(NullReplacedActivityLog)
meanStepsThroughoutDayEstimated <- tapply(NullReplacedActivityLog$steps, NullReplacedActivityLog$interval ~ NullReplacedActivityLog$DayType, mean)
rm(meanStepsThroughoutDayEstimated)
meanStepsThroughoutDayEstimated <- tapply(NullReplacedActivityLog$steps, NullReplacedActivityLog$interval ~ NullReplacedActivityLog$DayType, mean)
class(NullReplacedActivityLog$steps)
class(NullReplacedActivityLog$interval)
class(NullReplacedActivityLog$DayType)
meanStepsThroughoutDayEstimated <- tapply(NullReplacedActivityLog$steps, as.factor(NullReplacedActivityLog$interval) ~ NullReplacedActivityLog$DayType, mean)
meanStepsThroughoutDayEstimated <- tapply(NullReplacedActivityLog$steps, NullReplacedActivityLog$interval ~ NullReplacedActivityLog$DayType, FUN =mean)
meanStepsThroughoutDayEstimated <- tapply(NullReplacedActivityLog$steps, NullReplacedActivityLog$interval ~ NullReplacedActivityLog$DayType, FUN = mean)
?average
?ave
avg(NullReplacedActivityLog$steps, NullReplacedActivityLog$interval, NullReplacedActivityLog$DayType, FUN = mean)
library(stats)
avg(NullReplacedActivityLog$steps, NullReplacedActivityLog$interval, NullReplacedActivityLog$DayType, FUN = mean)
ave(NullReplacedActivityLog$steps, NullReplacedActivityLog$interval, NullReplacedActivityLog$DayType, FUN = mean)
head(avg(NullReplacedActivityLog$steps, NullReplacedActivityLog$interval, NullReplacedActivityLog$DayType, FUN = mean)
)
head(ave(NullReplacedActivityLog$steps, NullReplacedActivityLog$interval, NullReplacedActivityLog$DayType, FUN = mean))
?tapply
meanStepsThroughoutDayEstimated <- tapply(NullReplacedActivityLog$steps, NullReplacedActivityLog$interval ~ NullReplacedActivityLog$DayType, FUN = mean)
?list
meanStepsThroughoutDayEstimated <- tapply(NullReplacedActivityLog$steps, list(NullReplacedActivityLog$interval, NullReplacedActivityLog$DayType), FUN = mean)
meanstepsThroughoutDayNames
meanStepsThroughoutDayEstimated
head(meanStepsThroughoutDayEstimated)
meanStepsThroughoutDayEstimated <- tapply(NullReplacedActivityLog$steps, list( NullReplacedActivityLog$interval, NullReplacedActivityLog$DayType), FUN = mean)
weekdayMeanSteps <- data.frame(row.names(meanStepsThroughoutDayEstimated),meanStepsThroughoutDayEstimated[,1], rep("Weekday",length(meanStepsThroughoutDayEstimated[,1])))
weekendMeanSteps <- data.frame(row.names(meanStepsThroughoutDayEstimated),meanStepsThroughoutDayEstimated[,2], rep("Weekend",length(meanStepsThroughoutDayEstimated[,2])))
weekendMeanSteps <- data.frame(row.names(meanStepsThroughoutDayEstimated),meanStepsThroughoutDayEstimated[,2], rep("Weekend",length(meanStepsThroughoutDayEstimated[,2])))
meanstepsThroughoutDayNames <- c("interval","steps","dayType")
names(weekdayMeanSteps) <- meanstepsThroughoutDayNames
names(weekendMeanSteps) <- meanstepsThroughoutDayNames
meanStepsThroughoutDayEstimated <- rbind(weekdayMeanSteps, weekendMeanSteps)
histogram(~ steps | factor(dayType),data = meanStepsThroughoutDayEstimated)
?xyplot
xyplot(steps ~ interval | dayType, meanStepsThroughoutDayEstimated, type = "l",)
class(meanStepsThroughoutDayEstimated$interval)
meanStepsThroughoutDayEstimated$interval <- as.numeric(meanStepsThroughoutDayEstimated$interval)
xyplot(steps ~ interval | dayType, meanStepsThroughoutDayEstimated, type = "l",)
mas(meanStepsThroughoutDayEstimated$interval)
max(meanStepsThroughoutDayEstimated$interval)
max(as.numeric(NullReplacedActivityLog$interval))
head(weekdayMeanSteps)
max(as.numeric(weekdayMeanSteps$interval))
weekdayMeanSteps$interval
class(weekdayMeanSteps$interval)
as.numeric(weekdayMeanSteps$interval)
class(meanStepsThroughoutDayEstimated$interval)
max(meanStepsThroughoutDayEstimated)
max(meanStepsThroughoutDayEstimated$interval)
meanStepsThroughoutDayEstimated <- rbind(weekdayMeanSteps, weekendMeanSteps)
xyplot(steps ~ interval | dayType, meanStepsThroughoutDayEstimated, type = "l",)
meanStepsThroughoutDayEstimated$interval <- as.numeric(as.character(meanStepsThroughoutDayEstimated$interval))
xyplot(steps ~ interval | dayType, meanStepsThroughoutDayEstimated, type = "l",)
xyplot(steps ~ interval | dayType, meanStepsThroughoutDayEstimated, type = "l", layout=c(1,2))
xyplot(steps ~ interval/100 | dayType, meanStepsThroughoutDayEstimated, type = "l", layout=c(1,2), xlab = "Time Durring Day (24h)")
xyplot(steps ~ interval/100 | dayType, meanStepsThroughoutDayEstimated, type = "l", layout=c(1,2), xlab = "Time Durring Day (24h)", ylab = "Mean Steps In 5 Minute Interval")
xyplot(steps ~ interval/100 | dayType, meanStepsThroughoutDayEstimated, type = "l", layout=c(1,2), xlab = "Time Durring Day (24h)", ylab = "Mean Steps In 5 Minute Interval", main = "Average Steps Taken Throughout Day")
xyplot(steps ~ interval/100 | dayType, meanStepsThroughoutDayEstimated, type = "l", layout=c(1,2), xlab = "Time Durring Day (24h)", ylab = "Mean Steps In 5 Minute Interval", main = "Average Steps Taken Throughout Day", sub = "Comparing Weekend and Weekday Days")
xyplot(steps ~ interval/100 | dayType, meanStepsThroughoutDayEstimated, type = "l", layout=c(1,2), xlab = "Time Durring Day (24h)", ylab = "Mean Steps In 5 Minute Interval", main = "Average Steps Taken Throughout Day")
histOfStepsPerDay <- hist(stepsPerDay, main="Histogram of Total Steps Per Day", xlab="2000 Step Buckets", ylab ="Frequency", breaks=buckets, sub = "Figure 1")
plot(strtoi(names(meanStepsThroughoutDay))/100,meanStepsThroughoutDay, type="l", main = "Average Steps Taken Durring 5 Minute Intervals", xlab="Time of Day (24h)",ylab="Steps (#)", xaxt="n", sub = "Figure 2")
axis(1,at=seq(0,24, by=6),las=2)
histOfStepsPerDayEstimated <- hist(stepsPerDayEstimated, main="Histogram of Total Estimated Steps Per Day", xlab="2000 Step Buckets", ylab ="Frequency", breaks=buckets, sub = "Figure 3")
xyplot(steps ~ interval/100 | dayType, meanStepsThroughoutDayEstimated, type = "l", layout=c(1,2), xlab = "Time Durring Day (24h)", ylab = "Mean Steps In 5 Minute Interval", main = "Average Steps Taken Throughout Day", sub = "Figure 4")
?axis
plot(strtoi(names(meanStepsThroughoutDay))/100,meanStepsThroughoutDay, type="l", main = "Average Steps Taken Durring 5 Minute Intervals", xlab="Time of Day (24h)",ylab="Steps (#)", xaxt="n", sub = "Figure 2")
test <- axis(1,at=seq(0,24, by=6),las=2)
test
test
Figure3 <- hist(stepsPerDayEstimated, main="Histogram of Total Estimated Steps Per Day", xlab="2000 Step Buckets", ylab ="Frequency", breaks=buckets, sub = "Figure 3")
test
test <- plot(strtoi(names(meanStepsThroughoutDay))/100,meanStepsThroughoutDay, type="l", main = "Average Steps Taken Durring 5 Minute Intervals", xlab="Time of Day (24h)",ylab="Steps (#)", xaxt="n", sub = "Figure 2")
axis(1,at=seq(0,24, by=6),las=2)
test
Figure3 <- hist(stepsPerDayEstimated, main="Histogram of Total Estimated Steps Per Day", xlab="2000 Step Buckets", ylab ="Frequency", breaks=buckets, sub = "Figure 3")
test
Figure3
Figure4
figure4 <- xyplot(steps ~ interval/100 | dayType, meanStepsThroughoutDayEstimated, type = "l", layout=c(1,2), xlab = "Time Durring Day (24h)", ylab = "Mean Steps In 5 Minute Interval", main = "Average Steps Taken Throughout Day", sub = "Figure 4")
figure4
Figure3
```{r echo = FALSE}
png(filename = ".//figures//figure1.png")
plot(strtoi(names(meanStepsThroughoutDay))/100,meanStepsThroughoutDay, type="l", main = "Average Steps Taken Durring 5 Minute Intervals", xlab="Time of Day (24h)",ylab="Steps (#)", xaxt="n", sub = "Figure 2")
axis(1,at=seq(0,24, by=6),las=2)
dev.off
png(filename = ".//figures//figure1.png")
plot(strtoi(names(meanStepsThroughoutDay))/100,meanStepsThroughoutDay, type="l", main = "Average Steps Taken Durring 5 Minute Intervals", xlab="Time of Day (24h)",ylab="Steps (#)", xaxt="n", sub = "Figure 2")
axis(1,at=seq(0,24, by=6),las=2)
dev.off
getwd(
)
setwd("C:\\Users\\Michael\\Documents\\GitHub\\Coursera\\Reproducable Research\\RepData_PeerAssessment1")
if(!dir.exists(".//figures//"),,dir.create(".//figures"))
if(!dir.exists(".//figures//")) {dir.create(".//figures")}
if(!dir.exists(".//figures//")) {dir.create(".//figures")}
if(!dir.exists(".//figures")) {dir.create(".//figures")}
if(!dir.exists(".//figures")) {dir.create(".//figures")}
if(!dir.exists(".//figures")) {dir.create(".//figures")}
png(filename = ".//figures//figure1.png")
plot(strtoi(names(meanStepsThroughoutDay))/100,meanStepsThroughoutDay, type="l", main = "Average Steps Taken Durring 5 Minute Intervals", xlab="Time of Day (24h)",ylab="Steps (#)", xaxt="n", sub = "Figure 2")
axis(1,at=seq(0,24, by=6),las=2)
dev.off
dev.off()
histOfStepsPerDay
plot(histOfStepsPerDay)
png(filename = "figure1")
plot(histOfStepsPerDay)
dev.off()
png(filename = "figure1")
plot(histOfStepsPerDay)
dev.off()
png(filename = ".//figure1.png")
plot(histOfStepsPerDay)
dev.off()
png(filename = ".//figures//figure1.png")
plot(histOfStepsPerDay)
dev.off()
png(filename = ".//figures//figure2.png")
plot(strtoi(names(meanStepsThroughoutDay))/100,meanStepsThroughoutDay, type="l", main = "Average Steps Taken Durring 5 Minute Intervals", xlab="Time of Day (24h)",ylab="Steps (#)", xaxt="n", sub = "Figure 2")
axis(1,at=seq(0,24, by=6),las=2)
dev.off()
weekdayVsWeekend <- xyplot(steps ~ interval/100 | dayType, meanStepsThroughoutDayEstimated, type = "l", layout=c(1,2), xlab = "Time Durring Day (24h)", ylab = "Mean Steps In 5 Minute Interval", main = "Average Steps Taken Throughout Day", sub = "Figure 4")
weekdayVsWeekend
